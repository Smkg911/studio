// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for analyzing user transactions and providing financial advice.
 *
 * - analyzeTransactions - Analyzes user transactions and provides personalized advice.
 * - AnalyzeTransactionsInput - The input type for the analyzeTransactions function.
 * - AnalyzeTransactionsOutput - The return type for the analyzeTransactions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeTransactionsInputSchema = z.object({
  transactions: z.string().describe('A stringified JSON array of transactions, where each transaction has a description and amount.'),
  accountBalance: z.number().describe('The current account balance.'),
});
export type AnalyzeTransactionsInput = z.infer<typeof AnalyzeTransactionsInputSchema>;

const AnalyzeTransactionsOutputSchema = z.object({
  advice: z.string().describe('Personalized financial advice based on the transaction history and account balance, including saving tips and potential risks.'),
});
export type AnalyzeTransactionsOutput = z.infer<typeof AnalyzeTransactionsOutputSchema>;

export async function analyzeTransactions(input: AnalyzeTransactionsInput): Promise<AnalyzeTransactionsOutput> {
  return analyzeTransactionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeTransactionsPrompt',
  input: {schema: AnalyzeTransactionsInputSchema},
  output: {schema: AnalyzeTransactionsOutputSchema},
  prompt: `You are a personal finance assistant. Analyze the user's transactions and provide personalized advice on saving and potential risks. Consider the account balance when providing advice.

Transaction History:
{{transactions}}

Account Balance: {{accountBalance}}

Provide specific, actionable recommendations.
`,
});

const analyzeTransactionsFlow = ai.defineFlow(
  {
    name: 'analyzeTransactionsFlow',
    inputSchema: AnalyzeTransactionsInputSchema,
    outputSchema: AnalyzeTransactionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
